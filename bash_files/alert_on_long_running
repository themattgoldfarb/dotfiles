#!/bin/bash

# WARNING: This will overwrite your PROMPT_COMMAND and PS0 environment
# variables.  If you weren't using them, that's probably fine.
#
# This will alert for long running commands, commands run in a window that is
# not currently focused, or commands that match the commands to always alert.
# This will not alert for commands in commands to never alert.

time_to_alert=60
commands_to_always_alert=('blaze' 'demo1' 'demo2' 'demo3' 'run1' 'run2' 'run3' 'test-long')
commands_to_never_alert=('gitc' 'vim')



extra_history_file="$HOME/.history_extra"
#  Create the file if it is missing.
[[ -f $extra_history_file ]] || touch $extra_history_file

__get_from_extra_history() {
  id=$1
  cat $extra_history_file | grep "$id-$$" | tail -1
}

__before_command() {
  local history_output=$(HISTTIMEFORMAT="%s " history 1)
  local history_number=$(echo $history_output | awk '{print $1}')

  local window_pid=$(xdotool getwindowfocus getwindowpid 2> /dev/null)
  local time=$(date +%s)

  echo "$history_number-$$ window:$window_pid time:$time" >> $extra_history_file
}

__after_command() {
  local history_output=$(HISTTIMEFORMAT="%s " history 1)
  local history_number=$(echo $history_output | awk '{print $1}')
  local trim_hist=$(echo $history_output | xargs)
  local rest=${trim_hist#* }
  local last_command=${rest#* }

  local window_pid=$(xdotool getwindowfocus getwindowpid 2> /dev/null)

  local extras=$(__get_from_extra_history $history_number)
  local hist_window_pid=$(echo $extras | awk -F " |:" '{print $3}')
  local started_at==$(echo $extras | awk -F " |:" '{print $5}')

  local finished_at=$(date +%s)
  local elapsed_seconds=$(( $finished_at - $started_at ))
  local ds=$((elapsed_seconds % 60))
  local dm=$(((elapsed_seconds / 60) % 60))
  local dh=$((elapsed_seconds / 3600))
  local elapsed=$(printf '%02d:%02d:%02d' $dh $dm $ds)

  for command in "${commands_to_never_alert[@]}"
  do
    if [[ $last_command == *"$command"* ]]
    then
      return
    fi
  done

  if [[ $hist_window_pid != '' && $hist_window_pid != $window_pid ]] ; then
    notify-send "Unfocused command complete" "$last_command"
  elif (( $elapsed_seconds > $time_to_alert )); then
    if [ -n "$DISPLAY" ]; then
      notify-send "Long running command finished in ${elapsed}" "$last_command"
    else
      echo "Finished in ${elapsed}"
    fi
  else
    if [[ $last_command == *"blaze"* ]]
    then
      if [ -n "$DISPLAY" ]; then
        #notify-send "Blaze command finished in ${elapsed}" '<a href="http://sponge/lucky">Open Sponge</a>'
        notify-send "$last_command" "finished in ${elapsed}"
      else
        echo "Finished in ${elapsed}"
      fi
    else
      for command in "${commands_to_always_alert[@]}"
      do
        if [[ $last_command == *"$command"* ]]
        then
          if [ -n "$DISPLAY" ]; then
            notify-send "Long running command finished in ${elapsed}" "$last_command"
          else
            echo "Finished in ${elapsed}"
          fi
        fi
      done
    fi
  fi
}

PROMPT_COMMAND=__after_command
PS0='$(__before_command)'
